#!/bin/bash

# Code borrowed from
# https://medium.com/@jake.henningsgaard/exploring-git-customizing-commit-messages-1a4ecb4dca69

# Ignore branches with specific names
if [ -z "$BRANCHES_TO_SKIP" ]; then
  BRANCHES_TO_SKIP=('master' 'develop' 'test' 'main' 'release')
fi

# Get the name of the current branch
BRANCH_NAME=$(git symbolic-ref --short HEAD | sed 's;^.*/\([A-Z]\+-[0-9]\+\).*$;\1;')

# Check if current branch should be ignored
BRANCH_EXCLUDED=$(printf "%s\n" "${BRANCHES_TO_SKIP[@]}" | grep -c "^$BRANCH_NAME$")
BRANCH_IN_COMMIT=$(grep -c "^\s*[^#]*$BRANCH_NAME" "$1")

# Add branch name to commit messages
if [ -n "$BRANCH_NAME" ] &&  ! [ "$BRANCH_EXCLUDED" -eq 1 ] && ! [ "$BRANCH_IN_COMMIT" -ge 1 ]; then
  sed -i.bak -e "1s;^;$BRANCH_NAME: ;" "$1"
fi

